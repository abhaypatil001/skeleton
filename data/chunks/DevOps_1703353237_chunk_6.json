{"source": "DevOps_1703353237.txt", "chunk_id": "DevOps_1703353237_chunk_6", "text": "##t mv 13 | www. simplilearn. com interview guide 20. what is the process for reverting a commit that has already been pushed and made public? there are two ways that you can revert a commit : 1. remove or fix the bad file in a new commit and push it to the remote repository. then commit it to the remote repository using : git commit – m \" commit message \" 2. create a new commit that undoes all the changes that were made in the bad commit. use the following command : git revert < commit id > example : git revert 56de0938f 21. explain the difference between git fetch and git pull. git fetch git pull • git fetch only downloads new data from a remote repository • does not integrate any new • git pull updates the current head data into your working files branch with the latest changes from the remote server • users can run a git fetch at any time to update the remote - tracking • downloads new data and integrate branches it with the current working files • command - git fetch origin • tries to merge remote changes with your local ones git fetch – - all • command - git pull origin master 22. what is git stash? a developer working with a current branch wants to switch to another branch to work on something else, but the developer doesn't want to commit changes to your unfinished work. the solution to this issue is git stash. git stash takes your modified tracked files and saves them on a stack of unfinished changes that you can reapply at any time. 14 | www. simplilearn. com interview guide 23. explain the concept of branching in git. suppose you are working on an application, and you want to add a new feature to the app. you can create a new branch and build the new feature on that branch. • by default, you always work on the master branch • the circles on the branch represent various commits made on the branch • after you are done with all the changes, you can merge it with the master branch 24. what is the difference between git merge and git rebase? suppose you are working on a new feature in a dedicated branch, and another team member updates the master branch with new commits. you can use these two functions : git merge to incorporate the new commits into your feature branch, use git merge. ♦ c reates an extra merge commit every time you"}