{"source": "DevOps_1703353237.txt", "chunk_id": "DevOps_1703353237_chunk_7", "text": "and build the new feature on that branch. • by default, you always work on the master branch • the circles on the branch represent various commits made on the branch • after you are done with all the changes, you can merge it with the master branch 24. what is the difference between git merge and git rebase? suppose you are working on a new feature in a dedicated branch, and another team member updates the master branch with new commits. you can use these two functions : git merge to incorporate the new commits into your feature branch, use git merge. ♦ c reates an extra merge commit every time you need to incorporate changes ♦ but, it pollutes your feature branch history 15 | www. simplilearn. com interview guide git rebase as an alternative to merging, you can rebase the feature branch on to master. ♦ incorporates all the new commits in the master branch ♦ it creates new commits for every commit in the original branch and rewrites project history 25. how do you find a list of files that have been changed in a particular commit? the command to get a list of files that have been changed in a particular commit is : git diff - tree – r { commit hash } example : git diff - tree – r 87e673f21b • - r flag instructs the command to list individual files • commit hash will list all the files that were changed or added in that commit 26. what is a merge conflict in git, and how can it be resolved? a git merge conflict happens when you have merge branches with competing for commits, and git needs your help to decide which changes to incorporate in the final merge. 16 | www. simplilearn. com interview guide manually edit the conflicted file to select the changes that you want to keep in the final merge. resolve using github conflict editor this is done when a merge conflict is caused after competing for line changes. for example, this may occur when people make different changes to the same line of the same file on different branches in your git repository. • resolving a merge conflict using conflict editor : • under your repository name, click \" pull requests. \" • in the \" pull requests \" drop - down, click the pull request with a merge conflict that you'd like to resolve • near the bottom of your pull request, click \" resolve conflicts. \" • decide if you only want to keep your branch's changes, the"}