{"source": "DevOps_1703353237.txt", "chunk_id": "DevOps_1703353237_chunk_8", "text": ". resolve using github conflict editor this is done when a merge conflict is caused after competing for line changes. for example, this may occur when people make different changes to the same line of the same file on different branches in your git repository. • resolving a merge conflict using conflict editor : • under your repository name, click \" pull requests. \" • in the \" pull requests \" drop - down, click the pull request with a merge conflict that you'd like to resolve • near the bottom of your pull request, click \" resolve conflicts. \" • decide if you only want to keep your branch's changes, the other branch's changes, or make a brand new change, which may incorporate changes from both branches. • delete the conflict markers < < < < < < <, = = = = = = =, > > > > > > > and make changes you want in the final merge. 17 | www. simplilearn. com interview guide • if you have more than one merge conflict in your file, scroll down to the next set of conflict markers and repeat steps four and five to resolve your merge conflict. • once you have resolved all the conflicts in the file, click mark as resolved. • if you have more than one file with a conflict, select the next file you want to edit on the left side of the page under \" conflicting files \" and repeat steps four to seven until you've resolved all of your pull request's merge conflicts. • once you've resolved your merge conflicts, click commit merge. this merges the entire base branch into your head branch. 18 | www. simplilearn. com interview guide • to merge your pull request, click merge pull request. • a merge conflict is resolved using the command line. • open git bash. • navigate into the local git repository that contains the merge conflict. • generate a list of the files that the merge conflict affects. in this example, the file styleguide. md has a merge conflict. • open any text editor, such as sublime text or atom, and navigate to the file that has merge conflicts. • to see the beginning of the merge conflict in your file, search the file for the conflict marker \" < < < < < < <. \" open it, and you'll see the changes from the base branch after the line \" < < < < < < < head. \" • next, you'll see \" = = = = = = = \""}